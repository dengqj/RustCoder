name: Test Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          docker build -t rustcoder:test .
      
      - name: Test container startup
        run: |
          # Start container in background with dummy environment
          docker run -d --name rustcoder-test \
            -p 8000:8000 \
            -e LLM_API_BASE="http://dummy" \
            -e LLM_MODEL="dummy-model" \
            -e LLM_API_KEY="dummy-key" \
            -e SKIP_VECTOR_SEARCH="true" \
            rustcoder:test
          
          # Wait for container to start
          sleep 10
          
          # Check if container is running
          if ! docker ps | grep -q rustcoder-test; then
            echo "Container failed to start"
            docker logs rustcoder-test
            exit 1
          fi
          
          echo "Container started successfully"
          
          # Try to access the docs endpoint (should work even with dummy config)
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs || echo "000")
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "API docs endpoint is accessible"
          else
            echo "API docs endpoint returned: $HTTP_CODE"
            echo "Container logs:"
            docker logs rustcoder-test --tail=20
          fi
          
      - name: Cleanup
        if: always()
        run: |
          docker stop rustcoder-test || true
          docker rm rustcoder-test || true